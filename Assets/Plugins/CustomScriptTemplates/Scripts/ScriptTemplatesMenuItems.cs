using UnityEditor;

namespace CustomScriptTemplates
{
	/// <summary>
	/// Contains the Methods for the MenuItems. <br/>
	/// <i>The methods will be automatically generated by <see cref="ScriptTemplatesSettings"/>.</i>
	/// </summary>
	internal static class ScriptTemplatesMenuItems
	{
		// The region name must match with "ScriptTemplateSettings.REGION_NAME".
		#region MENU_ITEMS
        /// <summary>
        /// Creates a new Class.
        /// </summary>
        [MenuItem(ScriptTemplatesSettings.ROOT_ITEM + "Class")]
        private static void CreateClass()
        {
            ScriptTemplates.CreateCSharpScript("NewClass.cs", $"{ScriptTemplatesSettings.TemplatesFolderPath}/ClassTemplate.txt");
        }
        /// <summary>
        /// Creates a new Enum.
        /// </summary>
        [MenuItem(ScriptTemplatesSettings.ROOT_ITEM + "Enum")]
        private static void CreateEnum()
        {
            ScriptTemplates.CreateCSharpScript("NewEnum.cs", $"{ScriptTemplatesSettings.TemplatesFolderPath}/EnumTemplate.txt");
        }
        /// <summary>
        /// Creates a new Interface.
        /// </summary>
        [MenuItem(ScriptTemplatesSettings.ROOT_ITEM + "Interface")]
        private static void CreateInterface()
        {
            ScriptTemplates.CreateCSharpScript("NewInterface.cs", $"{ScriptTemplatesSettings.TemplatesFolderPath}/InterfaceTemplate.txt");
        }
        /// <summary>
        /// Creates a new MonoBehaviour.
        /// </summary>
        [MenuItem(ScriptTemplatesSettings.ROOT_ITEM + "MonoBehaviour")]
        private static void CreateMonoBehaviour()
        {
            ScriptTemplates.CreateCSharpScript("NewMonoBehaviour.cs", $"{ScriptTemplatesSettings.TemplatesFolderPath}/MonoBehaviourTemplate.txt");
        }
        /// <summary>
        /// Creates a new ScriptableObject.
        /// </summary>
        [MenuItem(ScriptTemplatesSettings.ROOT_ITEM + "ScriptableObject")]
        private static void CreateScriptableObject()
        {
            ScriptTemplates.CreateCSharpScript("NewScriptableObject.cs", $"{ScriptTemplatesSettings.TemplatesFolderPath}/ScriptableObjectTemplate.txt");
        }
        /// <summary>
        /// Creates a new Struct.
        /// </summary>
        [MenuItem(ScriptTemplatesSettings.ROOT_ITEM + "Struct")]
        private static void CreateStruct()
        {
            ScriptTemplates.CreateCSharpScript("NewStruct.cs", $"{ScriptTemplatesSettings.TemplatesFolderPath}/StructTemplate.txt");
        }
        /// <summary>
        /// Creates a new Text.
        /// </summary>
        [MenuItem(ScriptTemplatesSettings.ROOT_ITEM + "Text")]
        private static void CreateText()
        {
            ScriptTemplates.CreateTextFile("NewText.txt");
        }
		#endregion
	}
}